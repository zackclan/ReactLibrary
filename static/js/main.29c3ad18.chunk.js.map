{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Book","_this","this","props","books","map","book","index","react_default","a","createElement","class","title","author","pages","type","value","id","checked","isRead","onChange","for","onClick","Component","App","_this2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","myLibrary","loadName","React","createRef","name","handleChange","bind","assertThisInitialized","addBook","saveLibrary","loadLibrary","event","target","fieldValue","objectSpread","setState","library","toConsumableArray","_this3","preventDefault","fetch","concat","current","method","then","res","json","data","catch","e","console","log","_this4","x","headers","Content-Type","body","JSON","stringify","_creator","response","splice","_this5","role","data-toggle","data-target","tabindex","aria-labelledby","aria-hidden","onSubmit","handleFormSubmit","ref","data-dismiss","aria-haspopup","aria-expanded","placeholder","App_Book","i","handleIsRead","deleteEntry","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29c3ad18.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass Book extends Component {\n  render() {\n    return (\n      this.props.books.map((book,index) => {\n        return (\n        <div class=\"example-book\">\n          <p>{book.title}</p>\n          <p>{book.author}</p>\n          <p>{book.pages}</p>\n          <div class=\"form-check\">\n          <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" checked={book.isRead}\n          onChange={() => this.props.onChange(index)}/>\n          <label class=\"form-check-label\" for=\"defaultCheck1\">\n            Read\n          </label>\n          </div>\n          <button type=\"button\"class=\"btn btn-danger deletebutton\" onClick={() => this.props.onClick(index)}>x</button>\n        </div>\n        )\n      })\n    )\n  }\n}\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      myLibrary:[{\n        title:\"A Game of Thrones\",\n        author:\"George R.R. Martin\",\n        pages:\"756\",\n        isRead:true,\n      },{\n        title:\"The Fellowship of the Rings\",\n        author:\"J.R.R. Tolkien\",\n        pages:\"621\",\n        isRead:false,\n      },{\n        title:\"Foundation\",\n        author:\"Isaac Asimov\",\n        pages:\"421\",\n        isRead:true,\n      }],\n      value:{\n        pages:\"\",\n        title:\"\",\n        author:'',\n        isRead:false,\n      },\n    }\n    this.loadName = React.createRef();\n    this.name = React.createRef();\n    this.handleChange = this.handleChange.bind(this)\n    this.addBook = this.addBook.bind(this)\n    this.saveLibrary = this.saveLibrary.bind(this)\n    this.loadLibrary = this.loadLibrary.bind(this)\n  }\n\n  handleChange(event){\n    const target = event.target\n    const name = target.name\n    const fieldValue = target.type === 'checkbox' ? target.checked : target.value\n    let value = {...this.state.value}\n    value[name] = fieldValue\n    this.setState({value})\n\n  }\n  handleIsRead(index){\n    let library = [...this.state.myLibrary]\n    library[index].isRead = library[index].isRead? false : true;\n    this.setState({myLibrary:library})\n  }\n\n  loadLibrary(event) {\n    event.preventDefault();\n    fetch(`https://fast-ridge-91555.herokuapp.com/library/${this.loadName.current.value}`, {\n    method:'GET',\n    }).then(res => {\n      return res.json()\n    }).then((data) => {\n      this.setState({myLibrary: data.library})\n    })\n    .catch(e => {\n        console.log(e)\n    })\n  }\n\n  saveLibrary(event) {\n    event.preventDefault()\n    fetch(`https://fast-ridge-91555.herokuapp.com/library/${this.name.current.value}`, {\n      method:'DELETE',\n    }).then(() => {\n      this.state.myLibrary.map(x => {\n        fetch('https://fast-ridge-91555.herokuapp.com/library', {\n          method: 'POST',\n          headers: {\n            'Content-Type': \"application/json\"\n          },\n          body: JSON.stringify({\n            title: x.title,\n            author: x.author,\n            pages: x.pages,\n            isRead: x.isRead,\n            _creator: this.name.current.value,\n          })\n\n        }).then(res => res.json())\n          .then(response => console.log('success:', JSON.stringify(response)))\n          .catch(e => console.log(e))\n      })\n    })\n    \n    \n  }\n  handleFormSubmit(e) {\n    e.preventDefault()\n  }\n\n  deleteEntry(index){\n    let library = [...this.state.myLibrary]\n    library.splice(index,1)\n    this.setState({myLibrary:library})\n  }\n\n  addBook(event){\n    this.setState({myLibrary:[...this.state.myLibrary,this.state.value]})\n    this.setState({\n      value:{\n        pages:'',\n        title:'',\n        author:'',\n        isRead:false,\n      }\n    })\n    event.preventDefault();\n  }\n\n  \n  render() {\n    return (\n      <div>\n        <div class=\"header\">\n        <p>Library</p>\n      </div>\n        <div class=\"alert alert-success hidden\" role=\"alert\">\n          Your book has been added successfully!\n        </div>\n        <div class=\"library\">\n          <div class=\"top\">\n            <button class=\"save-library btn btn-primary\" data-toggle=\"modal\" data-target=\"#save-modal\">Save Library</button>\n            <div class=\"modal fade\" id=\"save-modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"saveModalLabel\" aria-hidden=\"true\">\n              <div class=\"modal-dialog\" role=\"document\">\n                <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                    <h5 class=\"modal-title\">Enter name you'd like to save library as</h5>\n                  </div>\n                  <div class=\"modal-body\">\n                    <form onSubmit={this.handleFormSubmit}>\n                      <div class=\"form-group\">\n                        <input type=\"text\" class=\"form-control\" id=\"save-name\" ref={this.name}/>\n                      </div>\n                      <div onClick={this.saveLibrary}class=\"btn btn-primary\" type=\"submit\" data-dismiss=\"modal\" id=\"hidePopUpBtn\">Save</div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <button class=\"load-library btn btn-primary\" data-toggle=\"modal\" data-target=\"#load-modal\">Load Library</button>\n            <div class=\"modal fade\" id=\"load-modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"loadModalLabel\" aria-hidden=\"true\">\n              <div class=\"modal-dialog\" role=\"document\">\n                <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                    <h5 class=\"modal-title\">Enter name of saved library</h5>\n                  </div>\n                  <div class=\"modal-body\">\n                    <form onSubmit={this.handleFormSubmit}>\n                      <div class=\"form-group\">\n                        <input type=\"text\" class=\"form-control\" id=\"save-name\" ref={this.loadName} />\n                      </div>\n                      <div onClick={this.loadLibrary} class=\"btn btn-primary\" type=\"submit\" data-dismiss=\"modal\" id=\"hidePopUpBtn\">Load</div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <button class=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"bookform\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              Add a book\n                </button>\n            <form onSubmit={this.addBook} class=\"dropdown-menu addform\" aria-labelledby=\"bookform\">\n              <div class=\"form-row\">\n                <div class=\"col\">\n                  <input name=\"title\" type=\"text\" class=\"form-control title\" placeholder=\"Title\" value={this.state.value.title} onChange={this.handleChange}/>\n                        </div>\n                </div>\n                <div class=\"form-row\">\n                  <div class=\"form-group col-md-9\">\n                  <input name=\"author\" type=\"text\" class=\"form-control author\" placeholder=\"Author\" value={this.state.value.author} onChange={this.handleChange}/>\n                        </div>\n                    <div class=\"form-group col-md-3\">\n                      <input name=\"pages\" type=\"text\" class=\"form-control pages\" placeholder=\"Pages\" value={this.state.value.pages} onChange={this.handleChange}/>\n                        </div>\n                    </div>\n                    <div class=\"form-group checkbox\">\n                      <div class=\"form-check\">\n                        <input name =\"isRead\"class=\"form-check-input checkread\" type=\"checkbox\" id=\"gridCheck\" checked={this.state.isRead} onChange={this.handleChange}/>\n                          <label class=\"form-check-label\" for=\"gridCheck\">\n                            Read\n                            </label>\n                        </div>\n                      </div>\n                      <button type=\"submit\" class=\"btn btn-primary addbook\">Add Book</button>\n                </form>\n                </div>\n                <Book\n                  onChange = {(i) => this.handleIsRead(i)}\n                  books={this.state.myLibrary}\n                  onClick = {(i) => this.deleteEntry(i)}\n                />\n              </div>\n                \n              </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}